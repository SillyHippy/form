from fastapi import FastAPI, Form, HTTPException
from fastapi.middleware.cors import CORSMiddleware
import smtplib
import os
import json
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()

# Enable CORS for frontend integration
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

SCOPES = ["https://www.googleapis.com/auth/gmail.send"]

# Load or refresh OAuth credentials
def get_gmail_credentials():
    creds = None
    if os.path.exists("token.json"):
        creds = Credentials.from_authorized_user_file("token.json", SCOPES)
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file("credentials.json", SCOPES)
            creds = flow.run_local_server(port=0)
        with open("token.json", "w") as token:
            token.write(creds.to_json())
    return creds

# Function to send email
def send_email(to_email, subject, body):
    creds = get_gmail_credentials()
    service = build("gmail", "v1", credentials=creds)
    
    message = f"""
    From: Your Name <your-email@gmail.com>
    To: {to_email}
    Subject: {subject}

    {body}
    """
    
    raw_message = base64.urlsafe_b64encode(message.encode("utf-8")).decode("utf-8")
    message = {'raw': raw_message}
    service.users().messages().send(userId="me", body=message).execute()

@app.post("/send-details")
def send_details(
    name: str = Form(...),
    email: str = Form(...),
    message: str = Form(""),
    details_included: bool = Form(False)
):
    subject = "Contact Exchange Confirmation"
    body = f"""
    Hi {name},
    
    Here are my contact details:
    Name: Your Name
    Email: your-email@gmail.com
    
    Thanks for reaching out!
    """
    send_email(email, subject, body)
    
    # Send email notification to you
    owner_subject = "New Contact Form Submission"
    owner_body = f"""
    Name: {name}
    Email: {email}
    Message: {message}
    Include Details of Meeting: {details_included}
    """
    send_email("your-email@gmail.com", owner_subject, owner_body)
    
    return {"message": "Details sent successfully!"}
